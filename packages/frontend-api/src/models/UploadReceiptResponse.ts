/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UploadReceiptResponse
 */
export interface UploadReceiptResponse {
    /**
     * 
     * @type {string}
     * @memberof UploadReceiptResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UploadReceiptResponse
     */
    filename?: string;
    /**
     * 
     * @type {string}
     * @memberof UploadReceiptResponse
     */
    contentType?: string;
    /**
     * 
     * @type {number}
     * @memberof UploadReceiptResponse
     */
    fileSize?: number;
    /**
     * 
     * @type {Date}
     * @memberof UploadReceiptResponse
     */
    uploadedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof UploadReceiptResponse
     */
    downloadUrl?: string;
}

/**
 * Check if a given object implements the UploadReceiptResponse interface.
 */
export function instanceOfUploadReceiptResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UploadReceiptResponseFromJSON(json: any): UploadReceiptResponse {
    return UploadReceiptResponseFromJSONTyped(json, false);
}

export function UploadReceiptResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadReceiptResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'contentType': !exists(json, 'contentType') ? undefined : json['contentType'],
        'fileSize': !exists(json, 'fileSize') ? undefined : json['fileSize'],
        'uploadedAt': !exists(json, 'uploadedAt') ? undefined : (new Date(json['uploadedAt'])),
        'downloadUrl': !exists(json, 'downloadUrl') ? undefined : json['downloadUrl'],
    };
}

export function UploadReceiptResponseToJSON(value?: UploadReceiptResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'filename': value.filename,
        'contentType': value.contentType,
        'fileSize': value.fileSize,
        'uploadedAt': value.uploadedAt === undefined ? undefined : (value.uploadedAt.toISOString()),
        'downloadUrl': value.downloadUrl,
    };
}

