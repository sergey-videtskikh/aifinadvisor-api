/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoryType } from './CategoryType';
import {
    CategoryTypeFromJSON,
    CategoryTypeFromJSONTyped,
    CategoryTypeToJSON,
} from './CategoryType';

/**
 * 
 * @export
 * @interface UpdateCategoryRequest
 */
export interface UpdateCategoryRequest {
    /**
     * Название категории
     * @type {string}
     * @memberof UpdateCategoryRequest
     */
    name: string;
    /**
     * 
     * @type {CategoryType}
     * @memberof UpdateCategoryRequest
     */
    type: CategoryType;
    /**
     * Иконка категории
     * @type {string}
     * @memberof UpdateCategoryRequest
     */
    icon?: string | null;
    /**
     * Цвет категории в HEX формате
     * @type {string}
     * @memberof UpdateCategoryRequest
     */
    color?: string | null;
    /**
     * ID родительской категории
     * @type {string}
     * @memberof UpdateCategoryRequest
     */
    parentId?: string | null;
    /**
     * Порядок отображения категории (меньше = выше в списке)
     * @type {number}
     * @memberof UpdateCategoryRequest
     */
    displayOrder?: number;
}

/**
 * Check if a given object implements the UpdateCategoryRequest interface.
 */
export function instanceOfUpdateCategoryRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function UpdateCategoryRequestFromJSON(json: any): UpdateCategoryRequest {
    return UpdateCategoryRequestFromJSONTyped(json, false);
}

export function UpdateCategoryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCategoryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': CategoryTypeFromJSON(json['type']),
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'displayOrder': !exists(json, 'displayOrder') ? undefined : json['displayOrder'],
    };
}

export function UpdateCategoryRequestToJSON(value?: UpdateCategoryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': CategoryTypeToJSON(value.type),
        'icon': value.icon,
        'color': value.color,
        'parentId': value.parentId,
        'displayOrder': value.displayOrder,
    };
}

