/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PagedTransactionsResponseSort } from './PagedTransactionsResponseSort';
import {
    PagedTransactionsResponseSortFromJSON,
    PagedTransactionsResponseSortFromJSONTyped,
    PagedTransactionsResponseSortToJSON,
} from './PagedTransactionsResponseSort';
import type { TransactionDto } from './TransactionDto';
import {
    TransactionDtoFromJSON,
    TransactionDtoFromJSONTyped,
    TransactionDtoToJSON,
} from './TransactionDto';

/**
 * 
 * @export
 * @interface PagedTransactionsResponse
 */
export interface PagedTransactionsResponse {
    /**
     * Массив транзакций на текущей странице
     * @type {Array<TransactionDto>}
     * @memberof PagedTransactionsResponse
     */
    content?: Array<TransactionDto>;
    /**
     * Общее количество транзакций
     * @type {number}
     * @memberof PagedTransactionsResponse
     */
    totalElements?: number;
    /**
     * Общее количество страниц
     * @type {number}
     * @memberof PagedTransactionsResponse
     */
    totalPages?: number;
    /**
     * Размер страницы
     * @type {number}
     * @memberof PagedTransactionsResponse
     */
    size?: number;
    /**
     * Номер текущей страницы (начиная с 0)
     * @type {number}
     * @memberof PagedTransactionsResponse
     */
    number?: number;
    /**
     * Количество элементов на текущей странице
     * @type {number}
     * @memberof PagedTransactionsResponse
     */
    numberOfElements?: number;
    /**
     * Первая ли это страница
     * @type {boolean}
     * @memberof PagedTransactionsResponse
     */
    first?: boolean;
    /**
     * Последняя ли это страница
     * @type {boolean}
     * @memberof PagedTransactionsResponse
     */
    last?: boolean;
    /**
     * Пустая ли текущая страница
     * @type {boolean}
     * @memberof PagedTransactionsResponse
     */
    empty?: boolean;
    /**
     * 
     * @type {PagedTransactionsResponseSort}
     * @memberof PagedTransactionsResponse
     */
    sort?: PagedTransactionsResponseSort;
}

/**
 * Check if a given object implements the PagedTransactionsResponse interface.
 */
export function instanceOfPagedTransactionsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PagedTransactionsResponseFromJSON(json: any): PagedTransactionsResponse {
    return PagedTransactionsResponseFromJSONTyped(json, false);
}

export function PagedTransactionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedTransactionsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': !exists(json, 'content') ? undefined : ((json['content'] as Array<any>).map(TransactionDtoFromJSON)),
        'totalElements': !exists(json, 'totalElements') ? undefined : json['totalElements'],
        'totalPages': !exists(json, 'totalPages') ? undefined : json['totalPages'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'numberOfElements': !exists(json, 'numberOfElements') ? undefined : json['numberOfElements'],
        'first': !exists(json, 'first') ? undefined : json['first'],
        'last': !exists(json, 'last') ? undefined : json['last'],
        'empty': !exists(json, 'empty') ? undefined : json['empty'],
        'sort': !exists(json, 'sort') ? undefined : PagedTransactionsResponseSortFromJSON(json['sort']),
    };
}

export function PagedTransactionsResponseToJSON(value?: PagedTransactionsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content === undefined ? undefined : ((value.content as Array<any>).map(TransactionDtoToJSON)),
        'totalElements': value.totalElements,
        'totalPages': value.totalPages,
        'size': value.size,
        'number': value.number,
        'numberOfElements': value.numberOfElements,
        'first': value.first,
        'last': value.last,
        'empty': value.empty,
        'sort': PagedTransactionsResponseSortToJSON(value.sort),
    };
}

