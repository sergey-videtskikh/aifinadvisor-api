/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.0.5
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImportBatchSummary } from './ImportBatchSummary';
import {
    ImportBatchSummaryFromJSON,
    ImportBatchSummaryFromJSONTyped,
    ImportBatchSummaryToJSON,
} from './ImportBatchSummary';

/**
 * 
 * @export
 * @interface ImportHistoryResponse
 */
export interface ImportHistoryResponse {
    /**
     * 
     * @type {Array<ImportBatchSummary>}
     * @memberof ImportHistoryResponse
     */
    content?: Array<ImportBatchSummary>;
    /**
     * 
     * @type {number}
     * @memberof ImportHistoryResponse
     */
    totalElements?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportHistoryResponse
     */
    totalPages?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportHistoryResponse
     */
    number?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportHistoryResponse
     */
    size?: number;
}

/**
 * Check if a given object implements the ImportHistoryResponse interface.
 */
export function instanceOfImportHistoryResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImportHistoryResponseFromJSON(json: any): ImportHistoryResponse {
    return ImportHistoryResponseFromJSONTyped(json, false);
}

export function ImportHistoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportHistoryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': !exists(json, 'content') ? undefined : ((json['content'] as Array<any>).map(ImportBatchSummaryFromJSON)),
        'totalElements': !exists(json, 'totalElements') ? undefined : json['totalElements'],
        'totalPages': !exists(json, 'totalPages') ? undefined : json['totalPages'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function ImportHistoryResponseToJSON(value?: ImportHistoryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content === undefined ? undefined : ((value.content as Array<any>).map(ImportBatchSummaryToJSON)),
        'totalElements': value.totalElements,
        'totalPages': value.totalPages,
        'number': value.number,
        'size': value.size,
    };
}

