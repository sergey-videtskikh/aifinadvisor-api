/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.0.5
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImportBatchSummary
 */
export interface ImportBatchSummary {
    /**
     * 
     * @type {string}
     * @memberof ImportBatchSummary
     */
    importId?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportBatchSummary
     */
    filename?: string;
    /**
     * 
     * @type {Date}
     * @memberof ImportBatchSummary
     */
    uploadedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof ImportBatchSummary
     */
    status?: ImportBatchSummaryStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof ImportBatchSummary
     */
    successCount?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportBatchSummary
     */
    errorCount?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportBatchSummary
     */
    totalCount?: number;
}


/**
 * @export
 */
export const ImportBatchSummaryStatusEnum = {
    Completed: 'COMPLETED',
    CompletedWithErrors: 'COMPLETED_WITH_ERRORS',
    Failed: 'FAILED'
} as const;
export type ImportBatchSummaryStatusEnum = typeof ImportBatchSummaryStatusEnum[keyof typeof ImportBatchSummaryStatusEnum];


/**
 * Check if a given object implements the ImportBatchSummary interface.
 */
export function instanceOfImportBatchSummary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImportBatchSummaryFromJSON(json: any): ImportBatchSummary {
    return ImportBatchSummaryFromJSONTyped(json, false);
}

export function ImportBatchSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportBatchSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'importId': !exists(json, 'importId') ? undefined : json['importId'],
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'uploadedAt': !exists(json, 'uploadedAt') ? undefined : (new Date(json['uploadedAt'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'successCount': !exists(json, 'successCount') ? undefined : json['successCount'],
        'errorCount': !exists(json, 'errorCount') ? undefined : json['errorCount'],
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
    };
}

export function ImportBatchSummaryToJSON(value?: ImportBatchSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'importId': value.importId,
        'filename': value.filename,
        'uploadedAt': value.uploadedAt === undefined ? undefined : (value.uploadedAt.toISOString()),
        'status': value.status,
        'successCount': value.successCount,
        'errorCount': value.errorCount,
        'totalCount': value.totalCount,
    };
}

