/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserResponse
 */
export interface UserResponse {
    /**
     * User ID
     * @type {string}
     * @memberof UserResponse
     */
    id?: string;
    /**
     * Email пользователя
     * @type {string}
     * @memberof UserResponse
     */
    email?: string;
    /**
     * Имя пользователя
     * @type {string}
     * @memberof UserResponse
     */
    firstName?: string;
    /**
     * Фамилия пользователя
     * @type {string}
     * @memberof UserResponse
     */
    lastName?: string;
    /**
     * Номер телефона
     * @type {string}
     * @memberof UserResponse
     */
    phoneNumber?: string | null;
    /**
     * Telegram никнейм
     * @type {string}
     * @memberof UserResponse
     */
    telegramNickname?: string | null;
    /**
     * Дата создания аккаунта
     * @type {Date}
     * @memberof UserResponse
     */
    createdAt?: Date;
    /**
     * Подтвержден ли email
     * @type {boolean}
     * @memberof UserResponse
     */
    isEmailVerified?: boolean;
    /**
     * Валюта по умолчанию (ISO-4217)
     * @type {string}
     * @memberof UserResponse
     */
    defaultCurrency?: string;
}

/**
 * Check if a given object implements the UserResponse interface.
 */
export function instanceOfUserResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserResponseFromJSON(json: any): UserResponse {
    return UserResponseFromJSONTyped(json, false);
}

export function UserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'telegramNickname': !exists(json, 'telegramNickname') ? undefined : json['telegramNickname'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'isEmailVerified': !exists(json, 'isEmailVerified') ? undefined : json['isEmailVerified'],
        'defaultCurrency': !exists(json, 'defaultCurrency') ? undefined : json['defaultCurrency'],
    };
}

export function UserResponseToJSON(value?: UserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'email': value.email,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'phoneNumber': value.phoneNumber,
        'telegramNickname': value.telegramNickname,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'isEmailVerified': value.isEmailVerified,
        'defaultCurrency': value.defaultCurrency,
    };
}

