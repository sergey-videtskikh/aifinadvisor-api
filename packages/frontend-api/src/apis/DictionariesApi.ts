/* tslint:disable */
/* eslint-disable */
/**
 * FinApp API
 * API for financial application
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: support@finapp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CategoryDto,
  CategoryIconsResponse,
  Currency,
  DefaultCategoryDto,
  ProblemDetails,
} from '../models/index';
import {
    CategoryDtoFromJSON,
    CategoryDtoToJSON,
    CategoryIconsResponseFromJSON,
    CategoryIconsResponseToJSON,
    CurrencyFromJSON,
    CurrencyToJSON,
    DefaultCategoryDtoFromJSON,
    DefaultCategoryDtoToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models/index';

/**
 * DictionariesApi - interface
 * 
 * @export
 * @interface DictionariesApiInterface
 */
export interface DictionariesApiInterface {
    /**
     * Возвращает справочник доступных иконок для категорий. Содержит группированный список иконок с описаниями и цветами. 
     * @summary Get category icons
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DictionariesApiInterface
     */
    getCategoryIconsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CategoryIconsResponse>>;

    /**
     * Возвращает справочник доступных иконок для категорий. Содержит группированный список иконок с описаниями и цветами. 
     * Get category icons
     */
    getCategoryIcons(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CategoryIconsResponse>;

    /**
     * Возвращает справочник всех поддерживаемых валют в системе. Список содержит ISO-4217 коды валют с описаниями. 
     * @summary Get currencies list
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DictionariesApiInterface
     */
    getCurrenciesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Currency>>>;

    /**
     * Возвращает справочник всех поддерживаемых валют в системе. Список содержит ISO-4217 коды валют с описаниями. 
     * Get currencies list
     */
    getCurrencies(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Currency>>;

    /**
     * Возвращает список категорий по умолчанию, которые доступны всем пользователям. Используется при первой настройке аккаунта. 
     * @summary Get default categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DictionariesApiInterface
     */
    getDefaultCategoriesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DefaultCategoryDto>>>;

    /**
     * Возвращает список категорий по умолчанию, которые доступны всем пользователям. Используется при первой настройке аккаунта. 
     * Get default categories
     */
    getDefaultCategories(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DefaultCategoryDto>>;

    /**
     * Возвращает персональный иерархический список категорий для текущего пользователя. Этот эндпоинт предназначен для чтения списка категорий (например, для селектов в UI). 
     * @summary Get user categories
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DictionariesApiInterface
     */
    getUserCategoriesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CategoryDto>>>;

    /**
     * Возвращает персональный иерархический список категорий для текущего пользователя. Этот эндпоинт предназначен для чтения списка категорий (например, для селектов в UI). 
     * Get user categories
     */
    getUserCategories(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CategoryDto>>;

}

/**
 * 
 */
export class DictionariesApi extends runtime.BaseAPI implements DictionariesApiInterface {

    /**
     * Возвращает справочник доступных иконок для категорий. Содержит группированный список иконок с описаниями и цветами. 
     * Get category icons
     */
    async getCategoryIconsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CategoryIconsResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/dictionaries/category-icons`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CategoryIconsResponseFromJSON(jsonValue));
    }

    /**
     * Возвращает справочник доступных иконок для категорий. Содержит группированный список иконок с описаниями и цветами. 
     * Get category icons
     */
    async getCategoryIcons(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CategoryIconsResponse> {
        const response = await this.getCategoryIconsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Возвращает справочник всех поддерживаемых валют в системе. Список содержит ISO-4217 коды валют с описаниями. 
     * Get currencies list
     */
    async getCurrenciesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Currency>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/dictionaries/currencies`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CurrencyFromJSON));
    }

    /**
     * Возвращает справочник всех поддерживаемых валют в системе. Список содержит ISO-4217 коды валют с описаниями. 
     * Get currencies list
     */
    async getCurrencies(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Currency>> {
        const response = await this.getCurrenciesRaw(initOverrides);
        return await response.value();
    }

    /**
     * Возвращает список категорий по умолчанию, которые доступны всем пользователям. Используется при первой настройке аккаунта. 
     * Get default categories
     */
    async getDefaultCategoriesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DefaultCategoryDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/dictionaries/default-categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DefaultCategoryDtoFromJSON));
    }

    /**
     * Возвращает список категорий по умолчанию, которые доступны всем пользователям. Используется при первой настройке аккаунта. 
     * Get default categories
     */
    async getDefaultCategories(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DefaultCategoryDto>> {
        const response = await this.getDefaultCategoriesRaw(initOverrides);
        return await response.value();
    }

    /**
     * Возвращает персональный иерархический список категорий для текущего пользователя. Этот эндпоинт предназначен для чтения списка категорий (например, для селектов в UI). 
     * Get user categories
     */
    async getUserCategoriesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CategoryDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/dictionaries/user-categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CategoryDtoFromJSON));
    }

    /**
     * Возвращает персональный иерархический список категорий для текущего пользователя. Этот эндпоинт предназначен для чтения списка категорий (например, для селектов в UI). 
     * Get user categories
     */
    async getUserCategories(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CategoryDto>> {
        const response = await this.getUserCategoriesRaw(initOverrides);
        return await response.value();
    }

}
